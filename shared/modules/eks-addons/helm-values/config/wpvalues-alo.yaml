externalDatabase:
  host: mysql-primary
  port: 3306
  user: aloroot
  password: passwordglo123
  database: alo

mariadb:
  enabled: false

wordpressUsername: aijadmin
wordpressPassword: aijadmin123
wordpressEmail: aijadmin@gmail.com
wordpressFirstName: ai
wordpressLastName: j


persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: my-ebs-sc
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 10Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.selector Selector to match an existing Persistent Volume for WordPress data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}



service:
  type: ClusterIP
  ports:
    http: 80
    https: 443

ingress:
  enabled: true
  hostname: wordpress.alo.internal.webpoint.io
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls.certresolver: production 
    traefik.ingress.kubernetes.io/router.entrypoints: websecure


extraHosts:
  - name: test.alo.wp.np
    path: /

# multisite:
#   enable: true
#   host: "alo.internal.webpoint.io"
#   networkType: subdomain
#   enableNipIoRedirect: false
